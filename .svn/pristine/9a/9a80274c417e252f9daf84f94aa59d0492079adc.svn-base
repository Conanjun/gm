<?php

// +----------------------------------------------------------------------
// | OneThink [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: 麦当苗儿 <zuojiazi@vip.qq.com> <http://www.zjzit.cn>
// +----------------------------------------------------------------------
namespace Dentist\Controller;
use User\Api\UserApi;
use Common\Common\Super\Order;
/**
 * 牙医 订单管理 : zl
 */
class OrderController extends AdminController
{
	private $model;
	
	//构造函数
	public function __construct()
	{
		parent::__construct();
		$this->model = D('Order');    // 牙医Model
	}
	
	/**
	 *订单管理首页
	 */
	public function index()
	{
		/*$stuid = $this->get_stuid(UID);    // 工作室id
		$where = "1=1 and dr.stuid = {$stuid}";         // 当前工作室下的牙医
		
		$filter= '';
		$name = empty($_GET['name'])?'':trim($_GET['name']);
		if($name){
			$filter .= " and d.name like '%{$name}%'";
		}
		
		$regionname = empty($_GET['regionname'])?'':trim($_GET['regionname']);//所在区域
		if($regionname){
			$filter .= " and d.regionname like '%{$regionname}%'";
		}
		$addr = empty($_GET['addr'])?'':trim($_GET['addr']);//地址
		if($addr){
			$filter .= " and d.addr like '%{$addr}%'";
		}
		$contact = empty($_GET['contact'])?'':trim($_GET['contact']);//联系人
		if($contact){
			$filter .= " and d.contact like '%{$contact}%'";
		}
		$tel = empty($_GET['tel'])?'':trim($_GET['tel']);//联系方式
		if($tel){
			$filter .= " and d.tel like '%{$tel}%'";
		}
		$pay_type = empty($_GET['pay_type'])?'':trim($_GET['pay_type']);//是否可用
		$pay_type == 1 and  $filter .= " and d.paytype = 1";
		$pay_type == 2 and  $filter .= " and d.paytype = 0";
		
		$enabled = empty($_GET['enabled'])?'':trim($_GET['enabled']);//是否可用
		$enabled == 1 and  $filter .= " and d.enabled = 1";
		$enabled == 2 and  $filter .= " and d.enabled = 0";
		$where .= $filter;*/
		
		//更新排序
		if (isset($_GET['sort']) && isset($_GET['order'])) {
			$sort = strtolower(trim($_GET['sort']));
			$order = strtolower(trim($_GET['order']));
			if (!in_array($order, array('asc', 'desc'))) {
				$sort = 'd.denid';
				$order = 'desc';
			}
		} else {
			$sort = 'd.stuid';
			$order = 'desc';
		}
		$where = ' 1 = 1 ';
		$count = $this->model->countNum($where);
		$page = new \Think\Page($count, 10);
		$lists = $this->model
			->alias('d')
			->join('ot_dentist_relation dr on dr.denid = d.denid')
			->where($where)
			//->order("$sort $order")
			->limit($page->firstRow . ',' . $page->listRows)
			->select();
		$page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
		$this->assign('lists', $lists);
		$this->assign('_page', $page->show());
		$this->assign('regions', D("region")->get_options(0));
		$this->assign('filtered', $filter ? 1 : 0); //是否有查询条件
		//订单状态
		$states = Order::$orderState;
		$this->assign('states',$states);
		$this->assign('types',$types);
		$this->display();
	}
	
	/**
	 * 新增订单
	 */
	public function add()
	{
		$stuid = $this->get_stuid(UID);    // 工作室id
		$denid = M('Dentist')->where(array('uid'=>UID))->getfield('denid');
		$time = time();
		if(IS_POST){
			$Model = M(); // 实例化一个空对象
			$Model->startTrans(); // 开启事务
			
			$processing_modem = I('processing_modem','');//加工方式
			if($processing_modem==''){
				$this->error('请选择加工方式');
			}
			$costplan = I('costplan',''); //普通服务内容
			if($costplan ==''){
				$this->error('请选择普通服务内容');
			}
			$costplan1 = I('costplan1',''); //其他服务
			$isurgents = I('isurgents',0);//是否加急
			$addr_id = I('addr_id',0);//邮寄地址
			if(empty($addr_id)){
				$this->error('请选择邮寄地址');
			}
			
			$doctor = I('doctor',''); //主治医生
			if(empty($doctor)){
				$this->error('请填写主治医生');
			}
			$doctorass = I('doctorass',''); //主治医生助理
			if(empty($doctorass)){
				$this->error('请填写主治医生助理');
			}
			$doctor1 = I('doctor1',''); //转诊医生
			$doctorass1 = I('doctorass1',''); //转诊医生助理
			$pname = I('pname',''); //患者姓名
			if(empty($pname)){
				$this->error('请填写患者姓名');
			}
			$gender = I('gender',0); //性别
			$birthday = I('birthday',''); //出生日期
			if(empty($birthday)){
				$this->error('请选择出生日期');
			}
			$birthday = strtotime($birthday);
			//判断是否新患者
			$patient = M('Patient')->where(array('denid'=>$denid,'realname'=>$pname,'gender'=>$gender,'birthday'=>$birthday))->find();
			if(empty($patient)){
				$patient_data = array( 'realname'=>$pname,'gender'=>$gender,'birthday'=>$birthday,'denid'=>$denid,'addtime'=>time(),'adduid'=>UID );
				M('Patient')->add($patient_data);
			}
			$age = I('age',0); //年龄
			$pedesc = I('pedesc',''); //患者主诉
			$pehistory = I('pehistory',''); //既往病史
			$isxft = I('isxft',0); //修复体
			$isyzy = I('isyzy',''); //牙周炎
			$issd = I('issd',''); //牙齿松动
			$repairtype = I('repairtype',''); //上部修复方式
			$surgerytime = I('surgerytime',0); //计划手术日期
			if(empty($surgerytime)){
				$this->error('请选择计划手术日期');
			}
			$toothposition= I('toothposition',''); //缺失牙位标记
			$toothposition1 = I('toothposition',''); //拟种植牙位
			$surgerysystem = I('surgerysystem',''); //种植体品牌及型号
			$surgerytool= I('surgerytool',''); //手术工具
			$mmodel = I('mmodel',''); //口内模型
			$cbct = I('cbct',''); //cbct
			$pic1 = I('pic1',''); //患者口内照片
			$pic2 = I('pic2',''); //患者面部照片
			$print1 = I('print1',''); //颌骨打印
			$print2 = I('print2',''); //模型打印
			$issd = I('issd',''); //牙齿松动
			$issd = I('issd',''); //牙齿松动
			$issd = I('issd',''); //牙齿松动
			
			$code = strtoupper(pinyin($pname, $ret_format = 'first', $placeholder = ''));
			$code = $this->getCode($code);
			
			$data = array(
				'name' => $name,
				'pic' => $pic,
				'country' => $country,
				'province' => $province,
				'city' => $city,
				'regionname' => $regionname,
				'addr' => $addr,
				'tel' => $tel,
				'contact' => $contact,
				'paytype' => $pay_type,
				'description' => $description,
				'enabled' => $enabled,
				'addtime'=>$time,
				'adduid'=>UID,
				'uid'=>$uid,
			
			);
			$denid = $this->model->add($data);
			
			if (!empty($denid)) {
				action_log_new(array('outtype' => 'ot_studio', 'outkey' => $denid, 'action' => 'add', 'comment' => ''));
				$Model->commit(); // 成功则提交事务
				$this->redirect('Dentist/index');
			} else {
				$Model->rollback(); // 否则将事务回滚
				$this->error(L('ADD_ERROR'));
			}
		}else{
			//服务类型
			$types = M('StudioService')
				->alias('ss')
				->field('ss.sid,d.d_value')
				->join("ot_dictionary d on d.d_key = ss.type and d.d_code='ser_type' and and d_del = 0")
				->where("ss.stuid = ".$stuid)
				->select();
			$this->assign('types',$types);
			//加工方式
			$processing_modem = M('Dictionary')->where("d_code = 'feeitem' and d_del = 0")->order('d_order asc')->select();
			$this->assign('processing_modem',$processing_modem);
			//服务方案-普通
			$costplan = M('Costplan')->where('servicetype=1')->select();
			$this->assign('costplan',$costplan);
			//服务方案-其他
			$costplan1 = M('Costplan')->where('servicetype=2')->select();
			$this->assign('costplan1',$costplan1);
			//牙医信息
			$dentist = M('Dentist')->where('uid='.UID)->find();
			$this->assign('dentist', $dentist);
			//邮寄地址
			$addr = M('Addess')->where('isdefault = 1 and uid = '.UID)->find();
			$this->assign('addr', $addr);
			//修复体
			$isxft = M('Dictionary')->where("d_code = 'isxft' and d_del = 0")->order('d_order asc')->select();
			$this->assign('isxft', $isxft);
			//牙周炎
			$isyzy = M('Dictionary')->where("d_code = 'isyzy' and d_del = 0")->order('d_order asc')->select();
			$this->assign('isyzy', $isyzy);
			//牙齿松动
			$issd = M('Dictionary')->where("d_code = 'issd' and d_del = 0")->order('d_order asc')->select();
			$this->assign('issd', $issd);
			//上部修复方式
			$repairtype = M('Dictionary')->where("d_code = 'repairtype' and d_del = 0")->order('d_order asc')->select();
			$this->assign('repairtype', $repairtype);
			//牙位
			$lacktooth1 = Order::$lacktooth1;
			$this->assign('lacktooth1', $lacktooth1);
			$lacktooth2 = Order::$lacktooth2;
			$this->assign('lacktooth2', $lacktooth2);
			//口内模型
			$mmodel = $repairtype = M('Dictionary')->where("d_code = 'mmodel' and d_del = 0")->order('d_order asc')->select();
			$this->assign('mmodel', $mmodel);
			$this->display();
		}
	}
	/**
	 * 编辑牙医
	 */
	public function edit()
	{
		if(IS_POST){
			$Model = M(); // 实例化一个空对象
			$Model->startTrans(); // 开启事务
			$id = empty($_POST['id'])?0:trim($_POST['id']);
			$where = "d.denid = {$id}";
			$lists =$this->model->getList($where);
			if(empty($lists)){
				$this->error(L('Data_not_exist'));
			}
			
			$name = empty($_POST['name'])?'':trim($_POST['name']);
			if(empty($name)){
				$this->error(L('NAME_NOT_EMPTY'));
			}
			
			if($this->model->uniqueName($name,$id)){
				$this->error(L('NAME_EXISTED'));
			}
			$pic = empty($_POST['pic'])?'':trim($_POST['pic']);
			$regionid = empty($_POST['regionid'])?'':trim($_POST['regionid']);
			$country = '';
			$province = '';
			$city = '';
			if($regionid){
				$arr = explode(',',$regionid);
				foreach($arr as $k => $v){
					if($k == 0){
						$country = $v;
					}elseif($k ==1 ){
						$province = $v;
					}elseif($k ==2){
						$city = $v;
					}
				}
			}
			$pay_type = empty($_POST['pay_type'])?'':trim($_POST['pay_type']);
			$regionname = empty($_POST['regionname'])?'':trim($_POST['regionname']);
			$addr = empty($_POST['addr'])?'':trim($_POST['addr']);
			$tel = empty($_POST['tel'])?'':trim($_POST['tel']);
			$contact = empty($_POST['contact'])?'':trim($_POST['contact']);
			$description = empty($_POST['description'])?'':trim($_POST['description']);
			$enabled = empty($_POST['enabled'])?0:trim($_POST['enabled']);
			$data = array(
				'denid'=>$id,
				'name' => $name,
				'pic' => $pic,
				'country' => $country,
				'province' => $province,
				'city' => $city,
				'regionname' => $regionname,
				'addr' => $addr,
				'tel' => $tel,
				'contact' => $contact,
				'paytype' => $pay_type,
				'description' => $description,
				'enabled' => $enabled,
			);
			$stuid = $this->model->save($data);
			if ($stuid != false) {
				$history = array();
				foreach ($data as $key => $vo) {
					if ($vo != $lists [$key]) {
						$history [] = array(
							'field' => $key,
							'olddata' => $lists [$key],
							'newdata' => $vo
						);
					}
				}
				$res = M('Ucenter_member')->where('id = ' . $_POST['uid'])->save(['password'=>$_POST['password']]);
				if ($res !== false) {
					$re = M('Member')->where('uid = ' .$_POST['uid'])->save(['nickname'=>$_POST['nickname']]);
				} else {
					$this->error(L('EDIT_ERROR'));
				}
				
				action_log_new(array('history'=>$history, 'outtype' => 'ot_studio', 'outkey' => $id, 'action' => 'edit', 'comment' => ''));
				$Model->commit(); // 成功则提交事务
				$this->redirect('Dentist/index');
			} else {
				$Model->rollback(); // 否则将事务回滚
				$this->error(L('EDIT_ERROR'));
			}
		}else{
			$id = empty($_GET['id'])?0:$_GET['id'];
			if(empty($id)){
				$this->error(L('PLEASE_SELECT_DATA'));
			}
			$where = "d.denid = {$id}";
			$list =$this->model->getList($where);
			if(empty($list)){
				$this->error(L('Data_not_exist'));
			}
			if($list['city']){
				$list['regionid'] = $list['city'];
			}elseif($list['province']){
				$list['regionid'] = $list['province'];
			}elseif($list['country']){
				$list['regionid'] = $list['country'];
			}else{
				$list['regionid'] = 0;
			}
			
			$user = M("Member")->join("left join ot_ucenter_member um on um.id=ot_member.uid")
				->join("left join ot_dentist d on d.uid=ot_member.uid")
				->field('d.uid,nickname,um.password')->where('d.uid='.$list['uid'])->find();
			$this->assign('user', $user);
			$this->assign('list', $list);
			$this->assign('regions', D("region")->get_options(0));
			$this->display();
		}
	}
	
	//异步上传图片
	public function uploadPic($files = "")
	{
		$c = C('DOWNLOAD_UPLOAD');
		$uploader = new \Think\Upload($c);// 实例化上传类
		$method = $_SERVER["REQUEST_METHOD"];
		$filename = I('get.filename');
		if ($method == "POST") {
			header("Content-Type: text/plain");
			if($files===''){
				$files  =   $_FILES;
			}
			$info = $uploader->upload($files);
			$result['success'] = true;
			$result['uploadName'] = $c['rootPath'].$info['qqfile']['savepath'].$info['qqfile']['savename'];
			echo json_encode($result);
		} else {
			header("HTTP/1.0 405 Method Not Allowed");
		}
		
	}
	
	public function get_stuid($uid){
		$user = M('Member')->where("uid=".$uid)->find();
		return $user['stuid'];
	}
	
	/*
	 * 删除收费项目
	 * */
	public function delete()
	{
		$id = array_unique(( array )I('id', 0));
		$id = is_array($id) ? implode(',', $id) : $id;
		if (empty ($id)) {
			$this->error(L('PLEASE_SELECT_DATA'));
		}
		//查询客户下是否有订单
		
		$count = M('order')->where('denid in {$id}')->count();
		if($count > 0){
			$this->error(L('CUSTOMERS_HAVE_ORDERS'));
		}
		$map ['denid'] = array('in', $id);
		if (M('Dentist')->where($map)->delete() !== false) {
			M('Dentist_relation')->where( )->delete();
			$this->success(L('DELETE_SUCCESS'), U('index'));
		} else {
			$this->error(L('DELETE_FAILED'));
		};
	}
	public function getCode($str){
		$code = $str.rand(100000,999999);
		$temp = $this->model->uniqueCode($code);
		if($temp){
			$this->getCode($str);
		}
		return $temp;
	}
	
}


