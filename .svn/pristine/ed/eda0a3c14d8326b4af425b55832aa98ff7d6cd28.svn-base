<?php

namespace Admin\Controller;
/**
 * 标签库控制器 ：ZL
 *
 */
class TagController extends AdminController
{
	private $model;
	
	//构造函数
	public function __construct()
	{
		parent::__construct();
		$this->model = D('Tag');
	}
	/*
     * 首页
     * */
	public function index(){
		$where = " 1=1 ";
		$tag_name = empty($_GET['tag_name'])?'':trim($_GET['tag_name']);//名称
		if($tag_name){
			$where .= " and t.tag_name like '%{$tag_name}%'";
		}
		$tag_type = I('tag_type','');
		if($tag_type){
			$where .= " and t.tag_type like '%{$tag_type}%'";
		}
		
		$count = $this->model->countNum($where);
		$page = new \Think\Page($count, 20);
		$lists = $this->model
				->alias('t')
				->where($where)
				->limit($page->firstRow . ',' . $page->listRows)
				->select();
		$page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
		$this->assign('lists', $lists);
		$this->assign('_page', $page->show());
		$this->display();
	}
	/*
     * 新增标签
     * */
	public function add(){
		if(IS_POST){
			$Model = M(); // 实例化一个空对象
			$Model->startTrans(); // 开启事务
			
			$tag_name = empty($_POST['tag_name'])?'':trim($_POST['tag_name']);
			if(empty($tag_name)){//名称不能为空
				$this->error(L('NAME_NOT_EMPTY'));
			}
			
			if($this->model->uniqueName($tag_name)){//名称已存在
				$this->error(L('NAME_EXISTED'));
			}
			$tag_type = empty($_POST['tag_type'])?'':trim($_POST['tag_type']);
			
			$data = array(
				'tag_name' => $tag_name,
				'tag_type' => $tag_type,
			);
			$id = $this->model->save($data);
			if (!empty($id)) {
				action_log_new(array('outtype' => 'ot_tag', 'outkey' => $id, 'action' => 'add', 'comment' => ''));
				$Model->commit(); // 成功则提交事务
				$this->redirect('Tag/index');
			} else {
				$Model->rollback(); // 否则将事务回滚
				$this->error(L('ADD_ERROR'));
			}
		}else{
			$this->display();
		}
	}
	
	/*
     * 编辑标签
     * */
	public function edit(){
		if(IS_POST){
			$Model = M(); // 实例化一个空对象
			$Model->startTrans(); // 开启事务
			
			$id = empty($_POST['id'])?0:trim($_POST['id']);
			$where = "tag_id = {$id}";
			$lists =$this->model->getList($where);
			if(empty($lists)){
				$this->error(L('Data_not_exist'));
			}
			
			$tag_name = empty($_POST['tag_name'])?'':trim($_POST['tag_name']);
			if(empty($tag_name)){//名称不能为空
				$this->error(L('NAME_NOT_EMPTY'));
			}
			
			if($this->model->uniqueName($tag_name,$id)){//名称已存在
				$this->error(L('NAME_EXISTED'));
			}
			
			$tag_type = empty($_POST['tag_type'])?'':trim($_POST['tag_type']);
			
			$data = array(
				'title' => $tag_name,
				'tag_type' => $tag_type,
				'id' => $id,
			);
			$id = $this->model->save($data);
			if (!empty($id)) {
				$history = array();
				foreach ($data as $key => $vo) {
					if ($vo != $lists [$key]) {
						$history [] = array(
							'field' => $key,
							'olddata' => $lists [$key],
							'newdata' => $vo
						);
					}
				}
				action_log_new(array('history'=>$history, 'outtype' => 'ot_tag', 'outkey' => $id, 'action' => 'edit', 'comment' => ''));
				$Model->commit(); // 成功则提交事务
				$this->redirect('Tag/index');
			} else {
				$Model->rollback(); // 否则将事务回滚
				$this->error(L('EDIT_ERROR'));
			}
		}else{
			$this->display();
		}
	}
	/*
     * 删除标签
     * */
	public function delete()
	{
		$ids = ( array )I('id');
		if (empty($ids[0])) {
			return $this->json_error(L('Data_not_exist'));
		}
		$msg = '';
		foreach($ids as $id){
			$where = "tag_id = {$id}";
			$list =$this->model->getList($where);
			if($list){
				$res = $this->model->where($where)->delete();
				if($res === false){
					$msg .= "『{$list['tag_name']}』".L('DELETE_FAILED')."\n";
				}else{
					$msg .= "『{$list['tag_name']}』".L('DELETE_SUCCESS')."\n";
					action_log_new(array('outtype' => 'ot_tag', 'outkey' => $id, 'action' => 'delete', 'comment' => ''));
				}
			}else{
				$msg .= L('DELETE_FAILED')."\n";
			}
		}
		$this->json_success($msg);
	}

}
