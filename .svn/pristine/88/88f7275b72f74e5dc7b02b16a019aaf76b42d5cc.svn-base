<?php

namespace Studio\Controller;
use Think\Page;
/**
 * 任务管理-实物接收 ：zlx
 *
 */
class OrderTaskSwController extends AdminController
{
	private $model;
	
	//构造函数
	public function __construct()
	{
		parent::__construct();
		$this->model = D('OrderTask');    // 订单任务
	}

	//首页
	public function index(){
        $stuid = $this->get_stuid(UID);    // 工作室id
        $where = "1=1 and o.stuid = {$stuid}";

        $filter= '';

        $order_sn = empty($_GET['order_sn'])?'':trim($_GET['order_sn']);//订单编号
        if($order_sn){
            $filter .= " and o.order_sn like '%{$order_sn}%'";
        }

        $tname = empty($_GET['tname'])?'':trim($_GET['tname']);//任务名称
        if($tname){
            $filter .= " and t.tname like '%{$tname}%'";
        }

        $finishname = empty($_GET['finishname'])?'':trim($_GET['finishname']);//完成人
        if($finishname){
            $filter .= " and m.nickname like '%{$finishname}%'";
        }


        $state = empty($_GET['state'])?'':trim($_GET['state']);//任务状态
        if($state){
            $filter .= " and t.state = '{$state}'";
        }

        $isurgent = empty($_GET['isurgent'])?'':trim($_GET['isurgent']);//是否加急
        $isurgent == 1 and  $filter .= " and t.isurgent = 1";
        $isurgent == 2 and  $filter .= " and t.isurgent = 0";

        $where .= $filter;
        $count = $this->model->alias('t')->join("ot_order o on t.oid = o.order_id")->join("ot_member m on m.uid = t.finishuid","left")
            ->join("ot_order_ext1 ot on ot.oid = o.order_id")
            ->join("ot_dictionary d on d.d_key = t.tasktype and d.d_code = 'task_type' and d.d_key = 10")
            ->count($where);
        $page = new \Think\Page($count, 10);
        $lists = $this->model
            ->alias('t')
            ->join("ot_order o on t.oid = o.order_id")
            ->join("ot_order_ext1 ot on ot.oid = o.order_id")
            ->join("ot_dictionary d on d.d_key = t.tasktype and d.d_code = 'task_type' and d.d_key = 10")
            ->join("ot_member m on m.uid = t.finishuid","left")
            ->where($where)
            ->limit($page->firstRow . ',' . $page->listRows)
            ->select();

       // echo  $this->model->_sql();
        $page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
        $this->assign('lists', $lists);
        $this->assign('_page', $page->show());
        $this->assign('filtered', $filter ? 1 : 0); //是否有查询条件

        $this->display();
	}

    //接受任务
    public function accept_tank(){
        $order_id = 1;
        $task = judge_tank($order_id);
        if($task!=200){
            $this->error($this->showTaskError($task));
        }
    }

	//异步上传图片
	public function uploadPic($files = "")
	{
		$c = C('DOWNLOAD_UPLOAD');
		$uploader = new \Think\Upload($c);// 实例化上传类
		$method = $_SERVER["REQUEST_METHOD"];
		$filename = I('get.filename');
		if ($method == "POST") {
			header("Content-Type: text/plain");
			if($files===''){
				$files  =   $_FILES;
			}
			$info = $uploader->upload($files);
			$result['success'] = true;
			$result['uploadName'] = $c['rootPath'].$info['qqfile']['savepath'].$info['qqfile']['savename'];
			echo json_encode($result);
		} else {
			header("HTTP/1.0 405 Method Not Allowed");
		}
		
	}

    //工作室ID
    public function get_stuid($uid){
        $user = M('Member')->where("uid=".$uid)->find();
        return $user['stuid'];
    }

    //公共判断
    public function judge_tank($order_id){
        if(!$order_id){
            return -1;
        }
        //查询订单是否存在
        $order = M('Order')->where('order_id = {$order_id}')->find();
        if(empty($order)){
            return -2;
        }
        //查询现付客户是否有未支付费用  支付状态 1-已支付 0-未支付 付费方式 0-现付 1-月付
        $pay = M('Order_pay')->where('oid = {$order_id}')->find();
        if(empty($pay)){
            return -1;
        }
        if($pay['paytype']==0){
            if($pay['state']==0){
                return -3;
            }
        }

        //订单状态是否是已提交
        if($order['state'] != 10){
            return -4;
        }
        //是否是种植业务
        if($order['servicetype'] != 10 ){
            return -5;
        }
        //口内模型是否是实物
        $order_ext = M('Order_ext1')->where('oid = {$order_id}')->find();
        if(empty($order_ext)){
            return -1;
        }
        if($order_ext['mmodel'] == 0 ){
            return -6;
        }
        return 200;
    }

    /**
     * 获取任务类型错误信息
     *
     * @param  integer $code 错误编码
     *
     * @return string        错误信息
     */
    public function showTaskError($code = 0)
    {
        switch ($code) {
            case -1:
                $error = '相关数据没有查到';
                break;
            case -2:
                $error = '此订单不存在';
                break;
            case -3:
                $error = '现付客户未支付费用';
                break;
            case -4:
                $error = '订单状态未提交';
                break;
            case -5:
                $error = '不是种植业务';
                break;
            case -6:
                $error = '口内模型不是实物';
                break;
            default:
                $error = '';
        }
        return $error;
    }

}
