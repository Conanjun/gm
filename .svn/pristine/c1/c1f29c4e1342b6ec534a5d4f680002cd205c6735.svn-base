
<block name="body">
    <link href="__ROOT__/Admin/css/in/bootstrap.min.css" rel="stylesheet">
    <link href="__ROOT__/Admin/font-awesome/css/font-awesome.css" rel="stylesheet">

    <link href="__ROOT__/Admin/css/in/animate.css" rel="stylesheet">
    <link href="__ROOT__/Admin/css/in/style.css" rel="stylesheet">
    <link rel="stylesheet" href="__ROOT__/Admin/js/in/plugins/scojs/css/scojs.css">

    <link href="__CSS__/in/iviews-order.css" rel="stylesheet">
    <link href="__CSS__/in/stylesheet.css" rel="stylesheet">
    <link href="__CSS__/in/piezas_dentales.css" rel="stylesheet">
    <script src="__JS__/in/vue.js"></script>
    <script src="__ROOT__/Admin/js/in/jquery-2.1.1.js"></script>
    <script src="__ROOT__/Admin/js/in/bootstrap.min.js"></script>
    <script src="__ROOT__/Admin/js/in/plugins/scojs/js/sco.message.js"></script>
    <script src="__ROOT__/Admin/js/in/plugins/slimscroll/jquery.slimscroll.min.js"></script>
    <script src="__ROOT__/Admin/js/in/iviews.base.js"></script>
    <script src="__ROOT__/Admin/js/in/iviews.extend.js"></script>
    <style>
        body {
            background: #fff;
            overflow: auto;
        }
        [v-cloak] {
            display: none !important;
        }
    </style>
    <!-- content begin -->
    <div class="wrapper wrapper-content" id="app">
        <div class="iviews-folder" id="drop-zone">

            <div class="form-group-cbct-file iviews-folder-button">
                上传文件夹
                <input type="file" name="filesToUpload[]" id="filesToUpload" multiple="multiple" accept="*.dcm" webkitdirectory="" directory="" />
            </div>

            <div class="iviews-folder-header clearfix">
                <div class="pull-left iviews-folder-header-nav">
                    <a href="">返回上一级</a>
                    <nav>
                        <a href="">全部文件</a>
                        <span>图片文件夹</span>
                    </nav>
                </div>
                <span class="pull-right">已全部加载,共{$count}个</span>
            </div>

            <div class="iviews-folder-bodyer">
                <div>
                    <table class="table table-hover">
                        <thead>
                        <tr>
                            <th class="text-left" width="40%">文件名</th>
                            <th>文件类型</th>
                            <th>大小</th>
                            <th>上传日期</th>
                        </tr>
                        </thead>
                        <tbody>
                        <volist name="files" id="vo">
                            <tr>
                                <td>
                                    <if condition="$vo['path'] neq ''">
                                        <span class="iviews-type-folder">{$vo['path']}</span>
                                    <elseif condition="$vo['ext'] eq 'zip'"/>
                                        <span class="iviews-type-zip">{$vo['name']}</span>
                                    <elseif condition="$vo['ftype'] eq 'jpg'"/>
                                        <span class="iviews-type-jpg">{$vo['name']}</span>
                                    <else/>
                                        <span class="iviews-type-zip">{$vo['name']}</span>
                                    </if>
                                </td>
                                <td>
                                   {$vo['ext']}
                                </td>
                                <td>{$vo['size']|format_bytes}</td>
                                <td>{$vo['addtime']|date='Y-m-d H:i',###}</td>
                            </tr>
                        </volist>
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
        <div class="iviews-order-mask" v-cloak v-if="step6.loadStatus">

            <div class="iviews-order-load">
                <span v-cloak :class="{ 'load': step6.flagStatus , 'success': !step6.flagStatus }">{{ step6.flagStatus ? '正在上传' : '上传结束' }}</span>
                <a href="javascript:void(0);" class="iv-icon-close"></a>

                <strong v-if="step6.flagStatus" v-cloak>正在上传: {{ step6.folder[0].file[step6.folder[0].file.length-1].name }}</strong>
                <strong v-if="!step6.flagStatus">上传成功</strong>

                <div class="folder-list">
                    <div class="folder-size" v-cloak>大小: {{ step6.folder[0].file[step6.folder[0].file.length-1].size | sizeFilter }}</div>
                    <div class="folder-progress" v-cloak>已上传:
                        <small>{{ step6.folder[0].file.length }}</small>/{{ step6.folder[0].length }}</div>
                </div>
                <div class="tips">提示: 请勿关闭页面以免影响文件上传</div>

            </div>

        </div>

        <div class="iviews-order-mask" v-cloak v-if="step6.fileStatus">

            <div class="iviews-order-folder">
                <a href="javascript:void(0);" class="iv-icon-close"></a>

                <div class="iviews-order-folder-header">
                    <span class="folder-name" v-cloak>{{ step6.folder[0].id }}</span>
                    <span class="folder-length" v-cloak>共{{ step6.folder[0].length }}个文件</span>
                    <span class="folder-total" v-cloak>{{ step6.folder[0].total | sizeFilter }} </span>
                    <a href="javascript:void(0)"></a>
                </div>

                <div class="full-height-scroll" style="height: 480px; overflow-y: scroll">
                    <table class="table table-striped table-hover">
                        <tbody>
                        <tr>
                            <td class="folder-name">{:L('FILENAME')}</td>
                            <td class="folder-time">{:L('UPLOADTIME')}</td>
                            <td class="folder-type">{:L('FILETYPE')}</td>
                            <td class="folder-size">{:L('FILESIZE')}</td>
                        </tr>
                        <tr v-for=" (item,$index) in step6.folder[0].file ">
                            <td class="folder-name" v-cloak>{{ item.name }}</td>
                            <td class="folder-time" v-cloak>{{ item.time }}</td>
                            <td class="folder-type" v-cloak>{{ item.type }}</td>
                            <td class="folder-size" v-cloak>{{ item.size | sizeFilter }}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>

        </div>

    </div>
    <script>
        $(function (){
            $('body').on('click','.iviews-order-load > a',function(){
            $('body').removeClass('hasMask');
            $('#page-wrapper > .border-bottom').eq(0).removeClass('hasMask');
            $('#page-wrapper > .wrapper').eq(0).removeClass('hasMask');
            order1.step6.loadStatus = false;
        })

            $('body').on('click', '.iviews-order-folder > a', function () {
                $('body').removeClass('hasMask');
                $('#page-wrapper > .border-bottom').eq(0).removeClass('hasMask');
                $('#page-wrapper > .wrapper').eq(0).removeClass('hasMask');
                order1.step6.fileStatus = false;
            })
            $('.diente_sup').prop('disabled',true);
            $('.diente_inf').prop('disabled',true);
            $("#confirm_goods").click(function () {
                var id="{$info.order_id}";
                var url = "{:U('Order/confirm_goods')}";
                var param = $("#send_form").serialize();
                $.ajax({
                    url: base.url + url ,
                    type: 'POST' ,
                    data: {'id':id},
                    dataType: 'json' ,
                    beforeSend: function() {
                    },
                    success: function(res) {
                        if( res.status == 1 ) {
                            window.location.href = res.url;
                        } else {
                            modal.text(error_box, res.info);
                            modal.open(error_box);
                        }
                    },
                    error: function(err) {
                    }
                })
            });
            $("#close").click(function () {
                var id="{$info.order_id}";
                var url = "{:U('Order/close')}";
                $.ajax({
                    url: base.url + url ,
                    type: 'POST' ,
                    data: {'id':id},
                    dataType: 'json' ,
                    beforeSend: function() {
                    },
                    success: function(res) {
                        if( res.status == 1 ) {
                            window.location.href = res.url;
                        } else {
                            modal.text(error_box, res.info);
                            modal.open(error_box);
                        }
                    },
                    error: function(err) {
                    }
                })
            });

            function handleDragOver(evt) {
                evt.stopPropagation();
                evt.preventDefault();
                evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
            }
            var dropZone = document.getElementById('drop-zone');
            // var dropFile = document.getElementById('filesToUpload');
            dropZone.addEventListener('dragover', handleDragOver, false);

            function handleFileSelect(evt) {
                evt.stopPropagation();
                evt.preventDefault();
                var files = [], folder = '',
                    items = evt.dataTransfer.items;

                order1.step6.loadStatus = true;

                if ( order1.step6.folder.length == 1 ) {
                    // alert('CBCT只允许上传一个文件夹');
                    order1.step6.loadStatus = false;
                    $.scojs_message("{:L('CBCT_ONLY_ONE')}", $.scojs_message.TYPE_ERROR);
                    return false;
                }

                function folderRead(entry,ordername) {
                    var folderObj = { name: entry.name, total: 0, id: ordername, file: [] }

                    entry.createReader().readEntries(function (entries) {
                        folderObj.length = entries.length;
                        // let total = 0;
                        for (var i = 0; i < entries.length; i++) {
                            var entrys = entries[i];

                            if (entrys.isFile) {
                                entrys.file(function (file) {

                                    // total += file.size;
                                    var fileObj = { name: file.name, size: file.size, type: file.type, time: 'ss'}
                                    // order.step6.loadStatus = true;
                                    // 打开状态层
                                    var fd = new FormData();
                                    fd.append('mypic', file);
                                    var url = "{:U('Dentist/Order/uploadFile',array('code'=>$code,'sn'=>$sn,'type'=>'cbct'))}";
                                    /* var path = files[x].webkitRelativePath.split('/');
                                     path.pop();
                                     var filename = path.toString().replace(/,/g,'/');*/

                                    $.ajax({
                                        url: url,
                                        method: 'post',
                                        contentType: false, // 注意这里应设为false
                                        processData: false,
                                        cache: false,
                                        async: true,
                                        data: fd,
                                        success: function(res) {
                                            if ( typeof res == 'string' ) {
                                                res = JSON.parse(res);
                                            }

                                            if (!res) return false;
                                            fileObj.time = res.msg.addtime;
                                            fileObj.size = res.msg.size;
                                            fileObj.type = res.msg.ext;
                                            folderObj.total += res.msg.size;
                                            order1.step6.flagStatus = true;
                                            folderObj.file.push(fileObj)
                                            // total +=res.size;
                                            if ( folderObj.length == folderObj.file.length ) {
                                                order1.step6.flagStatus = false;
                                                // order.step6.loadStatus = false;
                                            }
                                            $.full.open();
                                        },
                                        error: function(error) {
                                            console.log(error);
                                        }
                                    })
                                    // folderObj.total =  format_bytes(total);
                                    // folderObj.total = total;
                                })
                            } else {
                                folder = entrys.name;
                            }
                        }

                    });
                    order.step6.folder.push(folderObj)
                }
                for (var i = 0; i < items.length; i++) {
                    var entry = items[i].webkitGetAsEntry();
                    if (!entry) {
                        return;
                    }
                    if (entry.isFile) {
                        $.scojs_message("{:L('PFUPLOADFILE')}", $.scojs_message.TYPE_ERROR);
                    } else {
                        folderRead(entry, '{$sn}');
                    }
                }
            }
            dropZone.addEventListener('drop', handleFileSelect, false);


            $('#filesToUpload').on('change', function(ev, ordername){

                order1.step6.loadStatus = true;

                alert(order1.step6.loadStatus);

                if (order1.step6.folder.length == 1) {
                    order1.step6.loadStatus = false;
                    $.scojs_message("{:L('CBCT_ONLY_ONE')}", $.scojs_message.TYPE_ERROR);
                    return false;
                }

                ordername = '{$sn}'

                var folderObj = { name: '', id: ordername, total: 0, file: [], length: ev.target.files.length }

                if ( ev.target.files.length >= 1 ) {
                    var files = ev.target.files;
                    // var name = files[0].webkitRelativePath.split('/')[0];

                    folderObj.name = name;

                    for ( x in files ) {
                        if ( files[x].size ) {
                            let pathArr = files[x].webkitRelativePath.split('/');
                            pathArr.pop();
                            if ( files[x].size != 'undefined' && files[x].size >= 0 ) {
                                //total += files[x].size;
                                let fileObj = { path: pathArr.toString(), name: files[x].name, size: files[x].size, type: files[x].type, time: '' }
                                // var fileObj = { name: files[x].name, size: files[x].size, type: files[x].type, time: 'ss' }
                                var fd = new FormData();
                                fd.append('mypic', files[x]);
                                // fd.append('filename', 'ocdf/sdafsd');
                                var url1 = "{:U('Dentist/Order/uploadFile',array('code'=>$code,'sn'=>$sn,'type'=>'pro','vid'=>$vid,'oid'=>$oid))}";
                                $.ajax({

                                    url: url1+'&path='+pathArr.toString(),
                                    method: 'post',
                                    contentType: false, // 注意这里应设为false
                                    processData: false,
                                    cache: false,
                                    async: true,
                                    data: fd,
                                    success: function (res) {
                                        // console.log(res);
                                        // console.log(res.size);
                                        if (typeof res == 'string') {
                                            res = JSON.parse(res);
                                        }
                                        var data = res;
                                        if (!data || data == 'false') return false;
                                        fileObj.time = data.msg.addtime;
                                        fileObj.size = data.msg.size;
                                        fileObj.type = data.msg.ext;
                                        order1.step6.flagStatus = true;
                                        folderObj.file.push(fileObj)
                                        folderObj.total += data.msg.size;
                                        if (folderObj.length == folderObj.file.length) {
                                            order1.step6.flagStatus = false;
                                            // order.step6.loadStatus = false;
                                        }

                                        $('.iviews-order-mask').css({
                                            'position': 'fixed',
                                            'width': $(window).width(),
                                            'height': $(window).height(),
                                            'left': -($('.navbar-default').width() + 15),
                                            'top': -$('#page-wrapper > .border-bottom').eq(0).height()
                                        })
                                        $('body').addClass('hasMask');
                                        $('#page-wrapper > .border-bottom').eq(0).addClass('hasMask');
                                        $('#page-wrapper > .wrapper').eq(0).addClass('hasMask');
                                    },
                                    error: function (error) {
                                        console.log(error);
                                    }
                                })
                                // folderObj.total = format_bytes(total);
                            }
                        }
                    }
                    order1.step6.folder.push(folderObj)

                } else {
                    order1.step6.loadStatus = false;
                    $.scojs_message('{:L("MISC")}', $.scojs_message.TYPE_ERROR);
                }

            })
        });

        var order1 = new Vue({
            el: '#app',
            data () {
                return {
                    step6: {

                        folder: [] ,
                        fileStatus: false,
                        flagStatus: false,
                        loadStatus: false,

                    },
                }
            },
            updated () {
                $('.full-height-scroll').slimscroll({
                    height: '480px'
                })

                if(order1.step6.loadStatus || order1.step6.fileStatus) {
                    $('.iviews-order-mask').css({
                        'position': 'fixed',
                        'width': $(window).width(),
                        'height': $(window).height(),
                        'left': -($('.navbar-default').width() + 15),
                        'top': -$('#page-wrapper > .border-bottom').eq(0).height()
                    })
                    $('body').addClass('hasMask');
                    $('#page-wrapper > .border-bottom').eq(0).addClass('hasMask');
                    $('#page-wrapper > .wrapper').eq(0).addClass('hasMask');

                    $.full.open();
                } else {
                    $('.iviews-order-mask').attr('style','');
                    $('body').removeClass('hasMask');
                    $('#page-wrapper > .border-bottom').eq(0).removeClass('hasMask');
                    $('#page-wrapper > .wrapper').eq(0).removeClass('hasMask');

                    $.full.close();
                }
            },
            filters: {
                sizeFilter (val) {
                    var $units =   ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];
                    for (var $i =0; val >= 1024 && $i < 5; $i++) val /= 1024;
                    return  val.toFixed(2) + $units[$i];
                },
            },
            methods: {
                step6FolderDel(index) {
                    delete_file(index);
                },
                step6FolderSee() {
                    this.step6.fileStatus = true;
                }
            }
        });

        function delete_file(index){
            var $res = confirm('确定删除吗');
            if($res){
                $.get("{:U('Order/delete_file?sn='.$sn)}",function(data){
                    if(data.done){
                        order.step6.folder.splice(index,1);
                        $("#filesToUpload").val('');
                    }else{
                        $.scojs_message(data.msg, $.scojs_message.TYPE_ERROR);
                    }
                });
            }
        }
    </script>
    <!-- content end -->
</block>

