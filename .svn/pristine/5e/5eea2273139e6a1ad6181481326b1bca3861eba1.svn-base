<?php

namespace Admin\Controller;
/**
 * 标签库控制器 ：ZL
 *
 */
class TagController extends AdminController
{
	private $model;
	
	//构造函数
	public function __construct()
	{
		parent::__construct();
		$this->model = D('Tag');
	}
	/*
     * 首页
     * */
	public function index(){
		$where = " 1=1 ";
		$tag_name = empty($_GET['tag_name'])?'':trim($_GET['tag_name']);//名称
		if($tag_name){
			$where .= " and t.tag_name like '%{$tag_name}%'";
		}
		$tag_type = I('tag_type','');
		if($tag_type){
			$where .= " and t.tag_type like '%{$tag_type}%'";
		}
		
		$count = $this->model->countNum($where);
		$page = new \Think\Page($count, 20);
		$lists = $this->model
				->alias('t')
				->where($where)
				->limit($page->firstRow . ',' . $page->listRows)
				->select();
		$page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
		$this->assign('lists', $lists);
		$this->assign('_page', $page->show());
		$this->display();
	}
	/*
     * 新增标签
     * */
	public function add(){
		if(IS_POST){
			
			$tag_name = empty($_POST['tag_name'])?'':trim($_POST['tag_name']);
			if(empty($tag_name)){//名称不能为空
				$this->error(L('NAME_NOT_EMPTY'));
			}
			
			if($this->model->uniqueName($tag_name)){//名称已存在
				$this->error(L('NAME_EXISTED'));
			}
			$tag_type = empty($_POST['tag_type'])?'':trim($_POST['tag_type']);
			$stuid = empty($_POST['stuid'])?'':trim($_POST['stuid']);
			$denid = empty($_POST['denid'])?'':trim($_POST['denid']);
			
			if(empty($stuid)){//请选择工作室
				$this->error(L('请选择工作室'));
			}
			
			if(empty($denid)){//请选择医生
				$this->error(L('请选择医生'));
			}
			
			$data = array(
				'tag_name' => $tag_name,
				'tag_type' => $tag_type,
				'stuid' => $stuid,
				'denid' => $denid,
			);
			if (!M('Tag')->add($data)) {
                $this->error('标签添加失败！');
            } else {
                $this->success('标签添加成功！', U('index'));
            }
			
		}else{
			$studio = M('Studio')->field(true)->select();
            $this->assign('studio', $studio);
			$dentist = M('Dentist')->field(true)->select();
            $this->assign('dentist', $dentist);
			
			$this->display();
		}
	}
	
	/*
     * 编辑标签
     * */
	public function edit(){
		if(IS_POST){
			
			$id = empty($_POST['id'])?0:trim($_POST['id']);
			$where = "tag_id = {$id}";
			$lists =$this->model->getList($where);
			if(empty($lists)){
				$this->error(L('Data_not_exist'));
			}
			
			$tag_name = empty($_POST['tag_name'])?'':trim($_POST['tag_name']);
			if(empty($tag_name)){//名称不能为空
				$this->error(L('NAME_NOT_EMPTY'));
			}
			
			if($this->model->uniqueName($tag_name,$id)){//名称已存在
				$this->error(L('NAME_EXISTED'));
			}
			
			$tag_type = empty($_POST['tag_type'])?'':trim($_POST['tag_type']);
			$stuid = empty($_POST['stuid'])?'':trim($_POST['stuid']);
			$denid = empty($_POST['denid'])?'':trim($_POST['denid']);
			
			if(empty($stuid)){//请选择工作室
				$this->error(L('请选择工作室'));
			}
			
			if(empty($denid)){//请选择医生
				$this->error(L('请选择医生'));
			}
			
			$data = array(
				'tag_name' => $tag_name,
				'tag_type' => $tag_type,
				'stuid' => $stuid,
				'denid' => $denid,
				'tag_id' => $id,
				
			);
			if (D('Tag')->save($data) === false) {
                $this->error('标签编辑失败！', U('Tag/edit?id=' . $id));
            } else {
                $this->success('标签编辑成功！', U('index'));
            }
		}else{
			$id = empty($_GET['id'])?0:$_GET['id'];
			if(empty($id)){
				$this->error(L('PLEASE_SELECT_DATA'));
			}
			$where = "tag_id = {$id}";
			$list =$this->model->getList($where);
			if(empty($list)){
				$this->error(L('Data_not_exist'));
			}
            $this->assign('list', $list);
			$studio = M('Studio')->field(true)->select();
            $this->assign('studio', $studio);
			$dentist = M('Dentist')->field(true)->select();
            $this->assign('dentist', $dentist);
			
			$this->display();
			
		}
	}
	/*
     * 删除标签
     * */
	public function deletedata()
	{
		$id = array_unique(( array )I('id', 0));
        $id = is_array($id) ? implode(',', $id) : $id;
        if (empty ($id)) {
            $this->error('请选择要操作的数据!');
        }
        $map ['tag_id'] = array('in', $id);
        if (M('Tag')->where($map)->delete() !== false) {
            $this->success("删除成功", U('index'));
        } else {
            $this->error("删除失败");
        };
	}

}
