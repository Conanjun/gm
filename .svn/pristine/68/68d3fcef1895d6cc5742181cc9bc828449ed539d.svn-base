<?php

// +----------------------------------------------------------------------
// | OneThink [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: 麦当苗儿 <zuojiazi@vip.qq.com> <http://www.zjzit.cn>
// +----------------------------------------------------------------------
namespace Admin\Controller;

/**
 * 后台字典管理控制器
 */
class DictionaryController extends AdminController
{
    private $meta_title;

    /**
     *后台字典管理首页
     *
     */
    public function index()
    {
        $dcode = I('get.dcode');
        $dtid = I('get.dtid');
        $config = array(
            "actionURL" => "/Admin/Dictionary/index",
            "operators" => array("=" => "=", "!=" => "!=", ">" => ">", ">=" => ">=", "<" => "<", "<=" => "<=", "include" => "包含"),
            "params" => array(0 => array('str' => '字典编码', 'fieldname' => 'd_code', 'operator' => 'include', 'control' => 'input', 'values' => '')
            , 1 => array('str' => '字典名称', 'fieldname' => 'd_key', 'operator' => 'include', 'control' => 'input', 'values' => '')
            , 2 => array('str' => '字典值', 'fieldname' => 'd_value', 'operator' => 'include', 'control' => 'input', 'values' => '')
            , 3 => array('str' => '是否生效', 'fieldname' => 'd_del', 'operator' => '=', 'control' => 'select', 'values' => array("" => "", "1" => "是", "0" => "否"))
            )
        );
        $this->setSearchConfig($config);
        $where = $this->getCondition();
        $order = "";
        if (I('sort', '') && I('order', '')) {
            $order = I("sort") . " " . I("order");
        }
//		$where.=$where['_string']." and d_code=".I('get.dcode');
        if ($dcode) {
            $where['_string'] = "d_name=" . "'" . $dcode . "'";

        }
        $list = $this->lists('Dictionary', $where, $order);
        $dicNav = M('dictionary')->field('d_tid,d_name as d_code')->group('d_code')->select();
        $root_mbx = array();
        $root_mbx[] = array('title' => '管理', 'url' => U('ProjectConfig/index'));
        $root_mbx[] = array('title' => '字典', 'url' => '');
        $this->assign('root_mbx', $root_mbx);
        $this->assign('_list', $list);
        $this->assign('dicnav', $dicNav);
        $this->assign('dtid', $dtid);
        $this->meta_title = '字典管理';
        $this->display();
    }

    /**
     * 删除数据
     */
    public function deletedata()
    {
        $id = array_unique(( array )I('id', 0));
        $id = is_array($id) ? implode(',', $id) : $id;
        if (empty ($id)) {
            $this->error('请选择要操作的数据!');
        }
        $map ['d_tid'] = array('in', $id);
        if (M('Dictionary')->where($map)->delete() !== false) {
            $this->success("删除成功", U('index'));
        } else {
            $this->error("删除失败");
        };
    }

    /**
     * 新增字典
     *
     * @param string $d_code
     * @param string $d_key
     * @param string $d_value
     * @param string $d_order
     * @param string $d_del
     */
    public function add($d_code = '', $d_key = '', $d_value = '', $d_order = '', $d_del = '1')
    {
        if (IS_POST) {
            /* 检测密码 */
            if (empty ($d_code)) {
                $this->error('字典编码不能为空');
            }
            if (empty ($d_key)) {
                $this->error('字典名称不能为空');
            }
            if (empty ($d_value)) {
                $this->error('字典值不能为空');
            }
            if (empty ($d_order)) {
                $this->error('字典序号不能为空');
            }

            $data = array(
                'd_code' => $d_code,
                'd_key' => $d_key,
                'd_value' => $d_value,
                'd_order' => $d_order,
                'd_del' => $d_del
            );
            if (!M('Dictionary')->add($data)) {
                $this->error('字典添加失败！');
            } else {
                $this->success('字典添加成功！', U('index'));
            }
        } else {
            $this->meta_title = '新增字典';
            $root_mbx = array();
            $root_mbx[] = array('title' => '管理', 'url' => U('ProjectConfig/index'));
            $root_mbx[] = array('title' => '字典', 'url' => U('Dictionary/index'));
            $root_mbx[] = array('title' => '添加字典', 'url' => '');
            $this->assign('root_mbx', $root_mbx);
            $this->assign('d', array('d_del' => 1, 'd_order' => 255));
            $this->display();
        }
    }

    /**
     * 编辑字典
     *
     * @param string $id
     * @param string $d_code
     * @param string $d_key
     * @param string $d_value
     * @param string $d_order
     * @param string $d_del
     */
    public function edit($id = '', $d_code = '', $d_key = '', $d_value = '', $d_order = '', $d_del = '1')
    {
        if (empty($id)) {
            $this->error('字典数据不存在！');
        }
        if (IS_POST) {
            if (empty ($d_code)) {
                $this->error('字典编码不能为空');
            }
            if (empty ($d_key)) {
                $this->error('字典名称不能为空');
            }
            if (empty ($d_value)) {
                $this->error('字典值不能为空');
            }
            if (empty ($d_order)) {
                $this->error('字典序号不能为空');
            }

            $data = array(
                'd_tid' => $id,
                'd_code' => $d_code,
                'd_key' => $d_key,
                'd_value' => $d_value,
                'd_order' => $d_order,
                'd_del' => $d_del
            );
            if (D('Dictionary')->save($data) === false) {
                $this->error('字典编辑失败！', U('Dictionary/edit?id=' . $id));
            } else {
                $this->success('字典编辑成功！', U('index'));
            }
        } else {
            $this->meta_title = '编辑字典';
            $data = array();
            $data = M('Dictionary')->where("d_tid=" . $id)->find();
            if (empty($data)) {
                $this->error('字典数据不存在！');
            }
            $root_mbx = array();
            $root_mbx[] = array('title' => '管理', 'url' => U('ProjectConfig/index'));
            $root_mbx[] = array('title' => '字典', 'url' => U('Dictionary/index'));
            $root_mbx[] = array('title' => '编辑字典', 'url' => '');
            $this->assign('root_mbx', $root_mbx);
            $this->assign('id', $id);
            $this->assign('d', $data);
            $this->display();
        }
    }
}
