<?php

namespace Studio\Controller;
use Think\Page;
use Common\Common\Super\Order;
/**
 * 任务管理-标签打印 ：fhc
 *
 */
class OrderTaskBqController extends AdminController
{
	private $model;
	
	//构造函数
	public function __construct()
	{
		parent::__construct();
		$this->model = D('OrderTask');    // 订单任务
	}
    //首页
    public function index(){
        $stuid = Order::get_stuid(UID);     // 工作室id
        $where = "1=1 and tasktype = 'STUDIO_TASK_BQ' and o.stuid = {$stuid}";

        $filter= '';

        $order_sn = empty($_GET['order_sn'])?'':trim($_GET['order_sn']);//订单编号
        if($order_sn){
            $filter .= " and o.order_sn like '%{$order_sn}%'";
        }

        $tname = empty($_GET['tname'])?'':trim($_GET['tname']);//任务名称
        if($tname){
            $filter .= " and t.tname like '%{$tname}%'";
        }

        $finishname = empty($_GET['finishname'])?'':trim($_GET['finishname']);//完成人
        if($finishname){
            $filter .= " and m.nickname like '%{$finishname}%'";
        }


        $state = empty($_GET['state'])?'':trim($_GET['state']);//任务状态
        if($state){
            $filter .= " and t.state = '{$state}'";
        }

        $isurgent = empty($_GET['isurgent'])?'':trim($_GET['isurgent']);//是否加急
        $isurgent == 1 and  $filter .= " and t.isurgent = 1";
        $isurgent == 2 and  $filter .= " and t.isurgent = 0";

        if ($_GET['start_addtime']) {
            $af = gmstr2time($_GET['start_addtime']);
            $filter .= " and t.add_time>='" . $af . "'";
        }
        if ($_GET['end_addtime']) {
            $at = gmstr2time_end($_GET['end_addtime']);
            $filter .= " and t.add_time<'" . $at . "'";
        }
        if ($_GET['start_finishtime']) {
            $of = gmstr2time($_GET['start_finishtime']);
            $filter .= " and t.finishtime>='" . $of . "'";
        }
        if ($_GET['end_finishtime']) {
            $ot = gmstr2time_end($_GET['end_finishtime']);
            $filter .= " and t.finishtime<'" . $ot . "'";
        }
        $where .= $filter;
        $count = $this->model->alias('t')->join("ot_order o on t.oid = o.order_id")->join("ot_member m on m.uid = t.finishuid","left")->count($where);
        $page = new \Think\Page($count, 10);
        $lists = $this->model
            ->alias('t')
            ->field('t.*,t.state as task_state,o.*')
            ->join("ot_order o on t.oid = o.order_id")
            ->join("ot_member m on m.uid = t.finishuid","left")
            ->where($where)
            ->limit($page->firstRow . ',' . $page->listRows)
            ->select();
        $page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
        $this->assign('lists', $lists);
        $this->assign('_page', $page->show());
        $this->assign('filtered', $filter ? 1 : 0); //是否有查询条件
        $states = array('0'=>'未完成','1'=>'已完成');
        $this->assign('states',$states);
        $this->display();
    }

    //标签打印
    public function confirm(){
	    if(IS_POST){
            $tid = empty($_POST['tid'])?0:$_POST['tid'];
            if(empty($tid)){
                $this->json_error ( L('TASK_ERROR_EMPTY'), false );
            }
            $task = M("OrderTask")->where('tastkid='.$tid)->find();
            if(empty($task)){
                $this->json_error ( L('TASK_ERROR_EMPTY'), false );
            }
            $oid = $task['oid'];
            if(Order::checkorder($oid)==0){
                $this->json_error ( L('S_TASK_ERROR_1'), false );
            }
            $order = M("order")->where("order_id=".$oid)->find();
            if($order['state']!=Order::MODEL_PRINTED){
                $this->json_error ( L('S_TASK_BQ_ERROR_1'), false );
            }
            $Model = M(); // 实例化一个空对象
            $Model->startTrans(); // 开启事务
            //给客户发消息
            $title = "您的订单".$order['order_sn'].'状态已变更';
            $content = "工作室".$order['stuname']."将订单为".$order['order_sn'].'的订单状态改为'.L('TAG_PRINTED');
            $msg_id = Order::action_msg_log(array('fromid' => '', 'toid' =>$order['uid'], 'addtime' => '','title' => $title,'content' => $content, 'outtype' => 'client_order' ,'outkey'=>$oid));
            //生成标签打印任务
            $tname = '订单'.$order['order_sn'].'产品待包装';
            $newtid = Order::add_task(array('oid' => $oid, 'tname' =>$tname, 'tasktype' => 'STUDIO_TASK_CP', 'uid' => '' ,'note'=>$tname));
            //写入订单操作记录
            $log_id = Order::action_order_log(array('oid' => $oid, 'uid' =>'', 'addtime' => '', 'state' => Order::TAG_PRINTED ,'note'=>$content));
            //更改订单状态
            $result = M('Order')->where("order_id=".$oid)->save(array('state'=>Order::TAG_PRINTED));
            //更新任务状态
            $result1 = M('OrderTask')->where("tastkid=".$tid)->save(array('state'=>1));
            if($msg_id&&$newtid&&$log_id&&$result&&$result1){
                $Model->commit(); // 成功则提交事务
                $this->json_result ( array (), L('S_TASK_BQ_SUC'), false );
            }else{
                $Model->rollback(); // 否则将事务回滚
                $this->json_error(L('S_TASK_BQ_ERROR'));
            }
        }
    }
}
